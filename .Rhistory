combined_plot_no_jitter <- grid.arrange(plot_dog_office, plot_non_dog_office, ncol = 2)
## Apply the cap to ReadsDeduped and add a small constant to avoid log scale errors
dt.tax[, ReadsDeduped.cap := pmin(ReadsDeduped, 20000) + 1]
## Merge dt.tax with dt.dog_office to include category information
dt.tax_filtered <- merge(dt.tax, dt.dog_office[, .(sample_id, category, category2)], by="sample_id", all.x=TRUE)
## Filter for only Hominidae and Canidae families
relevant_families <- c('Hominidae', 'Canidae')
dt.tax_filtered <- dt.tax_filtered[Family %in% relevant_families]
## Add wall information, treating empty categories as "No Wall"
dt.tax_filtered[, `:=`(
is_wall = ifelse(category == "wall", "Wall", "No Wall")
)]
dt.tax_filtered[is.na(is_wall) | is_wall == "", is_wall := "No Wall"]
## Function to create boxplot without jitter (log scale)
create_boxplot <- function(data, title) {
ggplot(data, aes(x = is_wall, y = ReadsDeduped.cap, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
stat_summary(fun = median, geom = "point", shape = 18, size = 3, color = "black", position = position_dodge(width = 0.8)) +
scale_y_log10(labels = scales::comma) +
theme_minimal() +
labs(title = title, x = "Sample Location", y = "ReadsDeduped (capped, log10 scale)") +
theme(legend.position = "bottom")
}
## Function to create boxplot with jitter (log scale)
create_boxplot_with_jitter <- function(data, title) {
ggplot(data, aes(x = is_wall, y = ReadsDeduped.cap, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7, outlier.shape = NA) +
geom_jitter(aes(color = Family), position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2), alpha = 0.5) +
stat_summary(fun = median, geom = "point", shape = 18, size = 3, color = "black", position = position_dodge(width = 0.8)) +
scale_y_log10(labels = scales::comma) +
theme_minimal() +
labs(title = title, x = "Sample Location", y = "ReadsDeduped (capped, log10 scale)") +
theme(legend.position = "bottom")
}
## Create plots without jitter
plot_dog_office <- create_boxplot(dt.tax_filtered[category2 == "dog_office"], "Dog Office: Wall vs No Wall")
plot_non_dog_office <- create_boxplot(dt.tax_filtered[category2 != "dog_office"], "Non-Dog Office: Wall vs No Wall")
## Combine plots without jitter
combined_plot_no_jitter <- grid.arrange(plot_dog_office, plot_non_dog_office, ncol = 2)
## Save combined plot without jitter
ggsave("figures/walls_vs_no_walls.png", combined_plot_no_jitter, width = 16, height = 8)
## Create plots with jitter
plot_dog_office_jitter <- create_boxplot_with_jitter(dt.tax_filtered[category2 == "dog_office"], "Dog Office: Wall vs No Wall")
plot_non_dog_office_jitter <- create_boxplot_with_jitter(dt.tax_filtered[category2 != "dog_office"], "Non-Dog Office: Wall vs No Wall")
## Combine plots with jitter
combined_plot_with_jitter <- grid.arrange(plot_dog_office_jitter, plot_non_dog_office_jitter, ncol = 2)
## Save combined plot with jitter
ggsave("figures/walls_vs_no_walls_with_jitter.png", combined_plot_with_jitter, width = 16, height = 8)
## Save combined plot with jitter
ggsave("figures/walls_vs_no_walls_with_jitter.png", combined_plot_with_jitter, width = 16, height = 8)
library(data.table)
library(ggplot2)
library(dplyr)
## Set working directory
setwd("~/github/mpi_dogs/")
## Read in the txt file with dog office and category information
dt.dog_office <- fread('data/dog_samples/R_prep/dog_env_samples_24_v1.txt', na.strings = c('-','NA',''))
## Read in the tsv file with the quicksand data for all samples
dt.tax <- fread('data/env_samples/quicksand.v2/final_report.tsv', na.strings = c('-','NA',''))
## Filter and prepare the data
dt.tax_filtered <- merge(dt.tax, dt.dog_office[, .(sample_id, category, category2)], by="sample_id", all.x=TRUE)
dt.tax_filtered <- dt.tax_filtered[Family %in% c('Hominidae', 'Canidae')]
dt.tax_filtered[, ReadsDeduped.cap := pmin(ReadsDeduped, 20000) + 1]
## Extract unique categories and create mapping
unique_categories <- unique(dt.dog_office$category2)
category_mapping <- setNames(
gsub("_", " ", tools::toTitleCase(unique_categories)),
unique_categories
)
## Print the mapping to check
print(category_mapping)
library(data.table)
library(ggplot2)
library(dplyr)
## Set working directory
setwd("~/github/mpi_dogs/")
## Read in the txt file with dog office and category information
dt.dog_office <- fread('data/dog_samples/R_prep/dog_env_samples_24_v1.txt', na.strings = c('-','NA',''))
## Read in the tsv file with the quicksand data for all samples
dt.tax <- fread('data/env_samples/quicksand.v2/final_report.tsv', na.strings = c('-','NA',''))
## Filter and prepare the data
dt.tax_filtered <- merge(dt.tax, dt.dog_office[, .(sample_id, category, category2)], by="sample_id", all.x=TRUE)
dt.tax_filtered <- dt.tax_filtered[Family %in% c('Hominidae', 'Canidae')]
dt.tax_filtered[, ReadsDeduped.cap := pmin(ReadsDeduped, 20000) + 1]
## Extract unique categories
unique_categories <- unique(dt.dog_office$category2)
## Create initial mapping
category_mapping <- setNames(
gsub("_", " ", tools::toTitleCase(unique_categories)),
unique_categories
)
## Print initial mapping
print("Initial category mapping:")
print(category_mapping)
## Manual adjustments
# You can manually adjust the mapping here
#category_mapping["dog_office"] <- "Dog Office"
category_mapping["nc"] <- "Negative Control"
category_mapping["lab"] <- "PCR Lab"
category_mapping["nc_office"] <- "No Dog Office"
## Print final mapping
print("Final category mapping after manual adjustments:")
print(category_mapping)
## Apply the mapping to create the Category column
dt.tax_filtered[, Category := factor(category2, levels = names(category_mapping), labels = category_mapping)]
## Create the plot
ggplot(dt.tax_filtered, aes(x = Family, y = Category, fill = Family)) +
geom_boxplot(aes(x = Family, y = ReadsDeduped.cap),
position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
geom_jitter(aes(x = Family, y = ReadsDeduped.cap),
position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2), alpha = 0.3) +
scale_y_log10(labels = scales::comma) +
coord_flip() +
facet_wrap(~ Category, ncol = 1, scales = "free_y") +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "Family",
y = "ReadsDeduped (capped, log10 scale)") +
theme(legend.position = "bottom")
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped.cap, y = Category, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
geom_jitter(aes(color = Family), position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2), alpha = 0.3, size = 1) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "ReadsDeduped (capped, log10 scale)",
y = "Category") +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 0, hjust = 1),
panel.grid.major.y = element_line(color = "gray90"),
panel.grid.minor.y = element_blank()) +
scale_fill_brewer(palette = "Set1") +
scale_color_brewer(palette = "Set1")
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped.cap, y = Category, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
geom_jitter(aes(color = Family), position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2), alpha = 0.3, size = 1) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Category") +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 0, hjust = 1),
panel.grid.major.y = element_line(color = "gray90"),
panel.grid.minor.y = element_blank()) +
## Save the plot
ggsave("figures/category_family_distribution.png", width = 12, height = 10)
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped.cap, y = Category, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
geom_jitter(aes(color = Family), position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2), alpha = 0.3, size = 1) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Category") +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 0, hjust = 1),
panel.grid.major.y = element_line(color = "gray90"),
panel.grid.minor.y = element_blank())
library(data.table)
library(ggplot2)
library(dplyr)
## Set working directory
setwd("~/github/mpi_dogs/")
## Read in the txt file with dog office and category information
dt.dog_office <- fread('data/dog_samples/R_prep/dog_env_samples_24_v1.txt', na.strings = c('-','NA',''))
## Read in the tsv file with the quicksand data for all samples
dt.tax <- fread('data/env_samples/quicksand.v2/final_report.tsv', na.strings = c('-','NA',''))
## Filter and prepare the data
dt.tax_filtered <- merge(dt.tax, dt.dog_office[, .(sample_id, category, category2, office)], by="sample_id", all.x=TRUE)
dt.tax_filtered <- dt.tax_filtered[Family %in% c('Hominidae', 'Canidae')]
dt.tax_filtered[, ReadsDeduped.cap := pmin(ReadsDeduped, 20000) + 1]
## Extract unique categories
unique_categories <- unique(dt.dog_office$category2)
## Create initial mapping
category_mapping <- setNames(
gsub("_", " ", tools::toTitleCase(unique_categories)),
unique_categories
)
## Print initial mapping
print("Initial category mapping:")
print(category_mapping)
## Manual adjustments
category_mapping["nc"] <- "Negative Control"
category_mapping["lab"] <- "PCR Lab"
category_mapping["nc_office"] <- "No Dog Office"
## Print final mapping
print("Final category mapping after manual adjustments:")
print(category_mapping)
## Apply the mapping to create the Category column
dt.tax_filtered[, Category := factor(category2, levels = names(category_mapping), labels = category_mapping)]
## Create a new column for combined category labels
dt.tax_filtered[, CategoryLabel := paste0(Category, " (", office, ")")]
## Ensure the order of categories is preserved
dt.tax_filtered[, CategoryLabel := factor(CategoryLabel, levels = unique(CategoryLabel))]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped.cap, y = CategoryLabel, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
geom_jitter(aes(color = Family), position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2), alpha = 0.3, size = 1) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Category") +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 0, hjust = 1),
panel.grid.major.y = element_line(color = "gray90"),
panel.grid.minor.y = element_blank())
library(data.table)
library(ggplot2)
library(dplyr)
## Set working directory
setwd("~/github/mpi_dogs/")
## Read in the txt file with dog office and category information
dt.dog_office <- fread('data/dog_samples/R_prep/dog_env_samples_24_v1.txt', na.strings = c('-','NA',''))
## Read in the tsv file with the quicksand data for all samples
dt.tax <- fread('data/env_samples/quicksand.v2/final_report.tsv', na.strings = c('-','NA',''))
## Filter and prepare the data
dt.tax_filtered <- merge(dt.tax, dt.dog_office[, .(sample_id, category, category2, office)], by="sample_id", all.x=TRUE)
dt.tax_filtered <- dt.tax_filtered[Family %in% c('Hominidae', 'Canidae')]
dt.tax_filtered[, ReadsDeduped.cap := pmin(ReadsDeduped, 20000) + 1]
## Extract unique categories
unique_categories <- unique(dt.dog_office$category2)
## Create initial mapping
category_mapping <- setNames(
gsub("_", " ", tools::toTitleCase(unique_categories)),
unique_categories
)
## Print initial mapping
print("Initial category mapping:")
print(category_mapping)
## Manual adjustments
category_mapping["nc"] <- "Negative Control"
category_mapping["lab"] <- "PCR Lab"
category_mapping["nc_office"] <- "No Dog Office"
## Apply the mapping to create the Category column
dt.tax_filtered[, Category := factor(category2, levels = names(category_mapping), labels = category_mapping)]
## Create a new column for combined category labels, only for "lab" category
dt.tax_filtered[, CategoryLabel := ifelse(category2 == "lab",
paste0(Category, " (", office, ")"),
as.character(Category))]
## Ensure the order of categories is preserved
dt.tax_filtered[, CategoryLabel := factor(CategoryLabel, levels = unique(CategoryLabel))]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped.cap, y = CategoryLabel, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
geom_jitter(aes(color = Family), position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2), alpha = 0.3, size = 1) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Category") +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 0, hjust = 1),
panel.grid.major.y = element_line(color = "gray90"),
panel.grid.minor.y = element_blank())
dt.tax_filtered[, ReadsDeduped.cap := pmin(ReadsDeduped, 20000) + 1]
## Extract unique categories
unique_categories <- unique(dt.dog_office$category2)
## Create initial mapping
category_mapping <- setNames(
gsub("_", " ", tools::toTitleCase(unique_categories)),
unique_categories
)
## Print initial mapping
print("Initial category mapping:")
print(category_mapping)
## Manual adjustments
category_mapping["nc"] <- "Negative Control"
category_mapping["lab"] <- "PCR Lab"
category_mapping["nc_office"] <- "No Dog Office"
print(category_mapping)
## Manual adjustments
category_mapping["nc"] <- "Negative Control"
category_mapping["nc_office"] <- "No Dog Office"
## Apply the mapping to create the Category column
dt.tax_filtered[, Category := factor(category2, levels = names(category_mapping), labels = category_mapping)]
## Create a new column for combined category labels, only for "lab" category
dt.tax_filtered[, CategoryLabel := ifelse(category2 == "lab",
paste0(Category, " (", office, ")"),
as.character(Category))]
## Create a custom order for the categories
custom_order <- c(
setdiff(unique(dt.tax_filtered$CategoryLabel), dt.tax_filtered[category2 == "lab", unique(CategoryLabel)]),
dt.tax_filtered[category2 == "lab", sort(unique(CategoryLabel))]
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, CategoryLabel := factor(CategoryLabel, levels = custom_order)]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped.cap, y = CategoryLabel, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
geom_jitter(aes(color = Family), position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2), alpha = 0.3, size = 1) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Category") +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 0, hjust = 1),
panel.grid.major.y = element_line(color = "gray90"),
panel.grid.minor.y = element_blank())
library(data.table)
library(ggplot2)
library(dplyr)
## Set working directory
setwd("~/github/mpi_dogs/")
## Read in the txt file with dog office and category information
dt.dog_office <- fread('data/dog_samples/R_prep/dog_env_samples_24_v1.txt', na.strings = c('-','NA',''))
## Read in the tsv file with the quicksand data for all samples
dt.tax <- fread('data/env_samples/quicksand.v2/final_report.tsv', na.strings = c('-','NA',''))
## Filter and prepare the data
dt.tax_filtered <- merge(dt.tax, dt.dog_office[, .(sample_id, category, category2, office)], by="sample_id", all.x=TRUE)
dt.tax_filtered <- dt.tax_filtered[Family %in% c('Hominidae', 'Canidae')]
dt.tax_filtered[, ReadsDeduped.cap := pmin(ReadsDeduped, 20000) + 1]
## Extract unique categories
unique_categories <- unique(dt.dog_office$category2)
## Create initial mapping
category_mapping <- setNames(
gsub("_", " ", tools::toTitleCase(unique_categories)),
unique_categories
)
## Print initial mapping
print("Initial category mapping:")
print(category_mapping)
## Manual adjustments
category_mapping["nc"] <- "Negative Control"
category_mapping["nc_office"] <- "No Dog Office"
## Apply the mapping to create the Category column
dt.tax_filtered[, Category := factor(category2, levels = names(category_mapping), labels = category_mapping)]
## Create a new column for combined category labels, only for "lab" category
dt.tax_filtered[, CategoryLabel := ifelse(category2 == "lab",
paste0(Category, " (", office, ")"),
as.character(Category))]
## Create a custom order for the categories
custom_order <- c(
setdiff(unique(dt.tax_filtered$CategoryLabel), dt.tax_filtered[category2 == "lab", unique(CategoryLabel)]),
dt.tax_filtered[category2 == "lab", sort(unique(CategoryLabel))]
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, CategoryLabel := factor(CategoryLabel, levels = custom_order)]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped.cap, y = CategoryLabel, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
geom_jitter(aes(color = Family), position = position_jitterdodge(dodge.width = 0.8, jitter.width = 0.2), alpha = 0.3, size = 1) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Category") +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 0, hjust = 1),
panel.grid.major.y = element_line(color = "gray90"),
panel.grid.minor.y = element_blank())
## Create a custom order for the categories
custom_order <- c(
setdiff(unique(dt.tax_filtered$CategoryLabel), dt.tax_filtered[category2 == "lab", unique(CategoryLabel)]),
dt.tax_filtered[category2 == "lab", sort(unique(CategoryLabel))], "main-entrance", "elevator", "hallway"
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, CategoryLabel := factor(CategoryLabel, levels = custom_order)]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped.cap, y = CategoryLabel, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Category") +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 0, hjust = 1),
panel.grid.major.y = element_line(color = "gray90"),
panel.grid.minor.y = element_blank())
## Create a custom order for the categories
custom_order <- c(
setdiff(unique(dt.tax_filtered$CategoryLabel), dt.tax_filtered[category2 == "lab", unique(CategoryLabel)]),
dt.tax_filtered[category2 == "lab", sort(unique(CategoryLabel))]
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, CategoryLabel := factor(CategoryLabel, levels = custom_order)]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped.cap, y = CategoryLabel, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Category") +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 0, hjust = 1),
panel.grid.major.y = element_line(color = "gray90"),
panel.grid.minor.y = element_blank())
library(data.table)
library(ggplot2)
library(dplyr)
## Set working directory
setwd("~/github/mpi_dogs/")
## Read in the txt file with dog office and category information
dt.dog_office <- fread('data/dog_samples/R_prep/dog_env_samples_24_v1.txt', na.strings = c('-','NA',''))
## Read in the tsv file with the quicksand data for all samples
dt.tax <- fread('data/env_samples/quicksand.v2/final_report.tsv', na.strings = c('-','NA',''))
## Filter and prepare the data
dt.tax_filtered <- merge(dt.tax, dt.dog_office[, .(sample_id, category, category2, office)], by="sample_id", all.x=TRUE)
dt.tax_filtered <- dt.tax_filtered[Family %in% c('Hominidae', 'Canidae')]
dt.tax_filtered[, ReadsDeduped.cap := pmin(ReadsDeduped, 20000) + 1]
## Extract unique categories
unique_categories <- unique(dt.dog_office$category2)
## Create initial mapping
category_mapping <- setNames(
gsub("_", " ", tools::toTitleCase(unique_categories)),
unique_categories
)
## Print initial mapping
print("Initial category mapping:")
print(category_mapping)
## Manual adjustments
category_mapping["nc"] <- "Negative Control"
category_mapping["nc_office"] <- "No Dog Office"
## Apply the mapping to create the Category column
dt.tax_filtered[, Category := factor(category2, levels = names(category_mapping), labels = category_mapping)]
## Create a new column for combined category labels, only for "lab" category
dt.tax_filtered[, CategoryLabel := ifelse(category2 == "lab",
paste0(Category, " (", office, ")"),
as.character(Category))]
## Create a custom order for the categories
custom_order <- c(
setdiff(unique(dt.tax_filtered$CategoryLabel), dt.tax_filtered[category2 == "lab", unique(CategoryLabel)]),
dt.tax_filtered[category2 == "lab", sort(unique(CategoryLabel))]
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, CategoryLabel := factor(CategoryLabel, levels = custom_order)]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped.cap, y = CategoryLabel, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Category") +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 0, hjust = 1),
panel.grid.major.y = element_line(color = "gray90"),
panel.grid.minor.y = element_blank())
## Save the plot
ggsave("figures/category_family_distribution.png", width = 12, height = 10)
## Save the plot
ggsave("figures/category_family_distribution.svg", width = 12, height = 10)
library(svglite)
install.packages("svglite")
library(data.table)
library(ggplot2)
library(dplyr)
library(svglite)
## Set working directory
setwd("~/github/mpi_dogs/")
## Read in the txt file with dog office and category information
dt.dog_office <- fread('data/dog_samples/R_prep/dog_env_samples_24_v1.txt', na.strings = c('-','NA',''))
library(dplyr)
## Set working directory
setwd("~/github/mpi_dogs/")
## Read in the txt file with dog office and category information
dt.dog_office <- fread('data/dog_samples/R_prep/dog_env_samples_24_v1.txt', na.strings = c('-','NA',''))
## Read in the tsv file with the quicksand data for all samples
dt.tax <- fread('data/env_samples/quicksand.v2/final_report.tsv', na.strings = c('-','NA',''))
## Filter and prepare the data
dt.tax_filtered <- merge(dt.tax, dt.dog_office[, .(sample_id, category, category2, office)], by="sample_id", all.x=TRUE)
dt.tax_filtered <- dt.tax_filtered[Family %in% c('Hominidae', 'Canidae')]
dt.tax_filtered[, ReadsDeduped.cap := pmin(ReadsDeduped, 20000) + 1]
## Extract unique categories
unique_categories <- unique(dt.dog_office$category2)
## Create initial mapping
category_mapping <- setNames(
gsub("_", " ", tools::toTitleCase(unique_categories)),
unique_categories
)
## Print initial mapping
print("Initial category mapping:")
print(category_mapping)
## Manual adjustments
category_mapping["nc"] <- "Negative Control"
category_mapping["nc_office"] <- "No Dog Office"
## Apply the mapping to create the Category column
dt.tax_filtered[, Category := factor(category2, levels = names(category_mapping), labels = category_mapping)]
## Create a new column for combined category labels, only for "lab" category
dt.tax_filtered[, CategoryLabel := ifelse(category2 == "lab",
paste0(Category, " (", office, ")"),
as.character(Category))]
## Create a custom order for the categories
custom_order <- c(
setdiff(unique(dt.tax_filtered$CategoryLabel), dt.tax_filtered[category2 == "lab", unique(CategoryLabel)]),
dt.tax_filtered[category2 == "lab", sort(unique(CategoryLabel))]
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, CategoryLabel := factor(CategoryLabel, levels = custom_order)]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped.cap, y = CategoryLabel, fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Category") +
theme(legend.position = "bottom",
axis.text.y = element_text(angle = 0, hjust = 1),
panel.grid.major.y = element_line(color = "gray90"),
panel.grid.minor.y = element_blank())
## Save the plot
ggsave("figures/category_family_distribution.svg", width = 12, height = 10)
## Save the plot
ggsave("figures/category_family_distribution.png", width = 12, height = 10)
