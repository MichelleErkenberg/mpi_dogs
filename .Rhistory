unique_categories <- unique(dt.dog_office$category2)
## Define family order and custom colors
custom_colors <- c("Hominidae" = "#fed976", "Canidae" = "#35978f")
## Create initial mapping
category_mapping <- setNames(
gsub("_", " ", tools::toTitleCase(unique_categories)),
unique_categories
)
## Print initial mapping
print("Initial category mapping:")
print(category_mapping)
## Manual adjustments
category_mapping["nc"] <- "Negative Control"
category_mapping["nc_office"] <- "No Dog Office"
## Apply the mapping to create the Category column
dt.tax_filtered[, Category := factor(category2, levels = names(category_mapping), labels = category_mapping)]
## Create a new column for combined category labels, only for "lab" category
dt.tax_filtered[, CategoryLabel := ifelse(category2 == "lab",
paste0(Category, " (", office, ")"),
as.character(Category))]
# Finden Sie die einzigartigen Lab-Kategorien
lab_categories <- sort(unique(dt.tax_filtered[category2 == "lab", CategoryLabel]))
# Definieren Sie die gewünschte Reihenfolge
custom_order <- c(
"Dog Office",
lab_categories[1],  # Erste Lab-Kategorie (z.B. "Lab (Cleanroom)")
"Hallway",
lab_categories[2],  # Zweite Lab-Kategorie (z.B. "Lab (PCR Lab)")
"Main-Entrance",
"Elevator",
"No Dog Office",
"Negative Control"
)
## Set working directory
setwd("~/github/mpi_dogs/")
## Read in the txt file with dog office and category information
dt.dog_office <- fread('data/dog_samples/R_prep/dog_env_samples_24_v1.txt', na.strings = c('-','NA',''))
## Read in the tsv file with the quicksand data for all samples
dt.tax <- fread('data/env_samples/quicksand.v2/final_report.tsv', na.strings = c('-','NA',''))
## Filter and prepare the data
dt.tax_filtered <- merge(dt.tax, dt.dog_office[, .(sample_id, category, category2, office)], by="sample_id", all.x=TRUE)
dt.tax_filtered <- dt.tax_filtered[Family %in% c('Hominidae', 'Canidae')]
## Extract unique categories
unique_categories <- unique(dt.dog_office$category2)
## Define family order and custom colors
custom_colors <- c("Hominidae" = "#fed976", "Canidae" = "#35978f")
## Create initial mapping
category_mapping <- setNames(
gsub("_", " ", tools::toTitleCase(unique_categories)),
unique_categories
)
## Print initial mapping
print("Initial category mapping:")
print(category_mapping)
## Manual adjustments
category_mapping["nc"] <- "Negative Control"
category_mapping["nc_office"] <- "No Dog Office"
## Apply the mapping to create the Category column
dt.tax_filtered[, Category := factor(category2, levels = names(category_mapping), labels = category_mapping)]
## Create a new column for combined category labels, only for "lab" category
dt.tax_filtered[, CategoryLabel := ifelse(category2 == "lab",
paste0(Category, " (", office, ")"),
as.character(Category))]
# Finden Sie die einzigartigen Lab-Kategorien
lab_categories <- sort(unique(dt.tax_filtered[category2 == "lab", CategoryLabel]))
## Set working directory
setwd("~/github/mpi_dogs/")
## Read in the txt file with dog office and category information
dt.dog_office <- fread('data/dog_samples/R_prep/dog_env_samples_24_v1.txt', na.strings = c('-','NA',''))
## Read in the tsv file with the quicksand data for all samples
dt.tax <- fread('data/env_samples/quicksand.v2/final_report.tsv', na.strings = c('-','NA',''))
## Filter and prepare the data
dt.tax_filtered <- merge(dt.tax, dt.dog_office[, .(sample_id, category, category2, office)], by="sample_id", all.x=TRUE)
dt.tax_filtered <- dt.tax_filtered[Family %in% c('Hominidae', 'Canidae')]
## Extract unique categories
unique_categories <- unique(dt.dog_office$category2)
## Define family order and custom colors
custom_colors <- c("Hominidae" = "#fed976", "Canidae" = "#35978f")
## Create initial mapping
category_mapping <- setNames(
gsub("_", " ", tools::toTitleCase(unique_categories)),
unique_categories
)
## Print initial mapping
print("Initial category mapping:")
print(category_mapping)
## Manual adjustments
category_mapping["nc"] <- "Negative Control"
category_mapping["nc_office"] <- "No Dog Office"
## Apply the mapping to create the Category column
dt.tax_filtered[, Category := factor(category2, levels = names(category_mapping), labels = category_mapping)]
## Create a new column for combined category labels, only for "lab" category
dt.tax_filtered[, CategoryLabel := ifelse(category2 == "lab",
paste0(Category, " (", office, ")"),
as.character(Category))]
# Definieren Sie die gewünschte Reihenfolge
custom_order <- c(
"Dog Office",
lab_categories[1],  # Erste Lab-Kategorie (z.B. "Lab (Cleanroom)")
"Hallway",
lab_categories[2],  # Zweite Lab-Kategorie (z.B. "Lab (PCR Lab)")
"Main-Entrance",
"Elevator",
"No Dog Office",
"Negative Control"
)
# unique lab categories
lab_categories <- sort(unique(dt.tax_filtered[category2 == "lab", CategoryLabel]))
# define order
custom_order <- c(
"Dog Office",
lab_categories[1],  # Erste Lab-Kategorie (z.B. "Lab (Cleanroom)")
"Hallway",
lab_categories[2],  # Zweite Lab-Kategorie (z.B. "Lab (PCR Lab)")
"Main-Entrance",
"Elevator",
"No Dog Office",
"Negative Control"
)
# define order
custom_order <- c(
"Dog Office",
lab_categories[1],  # "Lab (Cleanroom)"
"Hallway",
lab_categories[2],  # "Lab (PCR Lab)"
"Main-Entrance",
"Elevator",
"No Dog Office",
"Negative Control"
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, CategoryLabel := factor(CategoryLabel, levels = custom_order)]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Location") +
theme(legend.position = "none") +
scale_fill_manual(values = custom_colors)
## Ensure the order of categories is preserved with the custom order
#dt.tax_filtered[, CategoryLabel := factor(CategoryLabel, levels = custom_order)]
dt.tax_filtered[, ReadsDeduped := ReadsDeduped + 1]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Location") +
theme(legend.position = "none") +
scale_fill_manual(values = custom_colors)
# define order
custom_order <- c(
"Negative Control",
"Dog Office",
lab_categories[1],  # "Lab (Cleanroom)"
"Hallway",
lab_categories[2],  # "Lab (PCR Lab)"
"Main-Entrance",
"Elevator",
"No Dog Office"
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, ReadsDeduped := ReadsDeduped + 1]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Location") +
theme(legend.position = "none") +
scale_fill_manual(values = custom_colors)
# define order
custom_order <- c(
"Negative Control",
"Dog office",
lab_categories[1],  # "Lab (Cleanroom)"
"Hallway",
lab_categories[2],  # "Lab (PCR Lab)"
"Main-Entrance",
"Elevator",
"No Dog Office"
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, ReadsDeduped := ReadsDeduped + 1]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Location") +
theme(legend.position = "none") +
scale_fill_manual(values = custom_colors)
# define order
custom_order <- c(
"Negative Control",
"Dog office",
lab_categories[1],  # "Lab (Cleanroom)"
"Hallway",
lab_categories[2],  # "Lab (PCR Lab)"
"Main-Entrance",
"Elevator",
"No Dog Office"
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, ReadsDeduped := ReadsDeduped + 1]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Location") +
theme(legend.position = "none") +
scale_fill_manual(values = custom_colors)
# define order
custom_order <- c(
"Negative Control",
#"Dog office",
lab_categories[1],  # "Lab (Cleanroom)"
"Hallway",
lab_categories[2],  # "Lab (PCR Lab)"
"Main-Entrance",
"Elevator",
"No Dog Office"
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, ReadsDeduped := ReadsDeduped + 1]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Location") +
theme(legend.position = "none") +
scale_fill_manual(values = custom_colors)
# define order
custom_order <- c(
"Negative Control",
lab_categories[1],  # "Lab (Cleanroom)"
"Hallway",
lab_categories[2],  # "Lab (PCR Lab)"
"Main-Entrance",
"Elevator",
"No Dog Office"
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, ReadsDeduped := ReadsDeduped + 1]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Location") +
theme(legend.position = "none") +
scale_fill_manual(values = custom_colors)
## Print initial mapping
print(category_mapping)
## Extract unique categories
unique_categories <- unique(dt.dog_office$category2)
## Extract unique categories
unique_categories <- unique(dt.dog_office$category2)
print(unique_categories)
## Manual adjustments
category_mapping <- c(
"dog_office" = "Dog Office",
"main-entrance" = "Main Entrance",
"elevator" = "Elevator",
"hallway" = "Hallway",
"nc_office" = "No Dog Office",
"nc" = "Negative Control"
)
## Apply the mapping to create the Category column
dt.tax_filtered[, Category := factor(category2, levels = names(category_mapping), labels = category_mapping)]
## Create a new column for combined category labels, only for "lab" category
dt.tax_filtered[, CategoryLabel := ifelse(category2 == "lab",
paste0(Category, " (", office, ")"),
as.character(Category))]
# unique lab categories
lab_categories <- sort(unique(dt.tax_filtered[category2 == "lab", CategoryLabel]))
# define order
custom_order <- c(
"Negative Control",
lab_categories[1],  # "Lab (Cleanroom)"
"Hallway",
lab_categories[2],  # "Lab (PCR Lab)"
"Main-Entrance",
"Elevator",
"No Dog Office"
)
# define order
custom_order <- c(
"Negative Control",
lab_categories[1],  # "Lab (Cleanroom)"
"Hallway",
lab_categories[2],  # "Lab (PCR Lab)"
"Main-Entrance",
"Elevator",
"No Dog Office"
"Dog Office"
# define order
custom_order <- c(
"Negative Control",
lab_categories[1],  # "Lab (Cleanroom)"
"Hallway",
lab_categories[2],  # "Lab (PCR Lab)"
"Main-Entrance",
"Elevator",
"No Dog Office",
"Dog Office"
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, ReadsDeduped := ReadsDeduped + 1]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Location") +
theme(legend.position = "none") +
scale_fill_manual(values = custom_colors)
# define order
custom_order <- c(
"Negative Control",
lab_categories[1],  # "Lab (Cleanroom)"
"Hallway",
lab_categories[2],  # "Lab (PCR Lab)"
"Main Entrance",
"Elevator",
"No Dog Office",
"Dog Office"
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, ReadsDeduped := ReadsDeduped + 1]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Location") +
theme(legend.position = "none") +
scale_fill_manual(values = custom_colors)
## Create a new column for combined category labels, only for "lab" category
dt.tax_filtered[, CategoryLabel := ifelse(category2 == "lab",
paste0(, " (", office, ")"),
as.character(Category))]
## Manual adjustments
category_mapping <- c(
"dog_office" = "Dog Office",
"main-entrance" = "Main Entrance",
"elevator" = "Elevator",
"hallway" = "Hallway",
"nc_office" = "No Dog Office",
"nc" = "Negative Control",
"lab" = "Lab"
)
## Apply the mapping to create the Category column
dt.tax_filtered[, Category := factor(category2, levels = names(category_mapping), labels = category_mapping)]
## Create a new column for combined category labels, only for "lab" category
dt.tax_filtered[, CategoryLabel := ifelse(category2 == "lab",
paste0(Category, " (", office, ")"),
as.character(Category))]
# unique lab categories
lab_categories <- sort(unique(dt.tax_filtered[category2 == "lab", CategoryLabel]))
# define order
custom_order <- c(
"Negative Control",
lab_categories[1],  # "Lab (Cleanroom)"
"Hallway",
lab_categories[2],  # "Lab (PCR Lab)"
"Main Entrance",
"Elevator",
"No Dog Office",
"Dog Office"
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, ReadsDeduped := ReadsDeduped + 1]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Category and Family",
x = "mtDNA (log10 scale)",
y = "Location") +
theme(legend.position = "none") +
scale_fill_manual(values = custom_colors)
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Location and Family",
x = "mtDNA (log10 scale)",
y = "Location",
fill = "Family") +
theme(legend.position = "right") +
scale_fill_manual(values = custom_colors)
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Location and Family",
x = "mtDNA (log10 scale)",
y = "Location",
fill = "Family") +
theme(legend.position = "bottum") +
scale_fill_manual(values = custom_colors)
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Location and Family",
x = "mtDNA (log10 scale)",
y = "Location",
fill = "Family") +
theme(legend.position = "buttom") +
scale_fill_manual(values = custom_colors)
legend.margin = margin(t = 0, r = 0, b = 0, l = 0) +
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Location and Family",
x = "mtDNA (log10 scale)",
y = "Location",
fill = "Family") +
theme(
legend.position = "bottom",
legend.box.just = "center",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0)
) +
scale_fill_manual(values = custom_colors)
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Location and Family",
x = "mtDNA (log10 scale)",
y = "Location",
fill = "Family") +
theme(
legend.position = "bottom",
legend.box.just = "center",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0)) +
scale_fill_manual(values = custom_colors)
# define order
custom_order <- c(
"Negative Control",
lab_categories[1],  # "Lab (Cleanroom)"
lab_categories[2],  # "Lab (PCR Lab)"
"No Dog Office",
"Hallway",
"Elevator",
"Main Entrance",
"Dog Office"
)
## Ensure the order of categories is preserved with the custom order
dt.tax_filtered[, ReadsDeduped := ReadsDeduped + 1]
## Create the plot
ggplot(dt.tax_filtered, aes(x = ReadsDeduped, y = factor(CategoryLabel, levels = custom_order), fill = Family)) +
geom_boxplot(position = position_dodge(width = 0.8), width = 0.7, alpha = 0.7) +
coord_cartesian(xlim = c(1, max(dt.tax_filtered$ReadsDeduped, na.rm = TRUE))) +
scale_x_log10(labels = scales::comma) +
theme_minimal() +
labs(title = "Distribution of Reads by Location and Family",
x = "mtDNA (log10 scale)",
y = "Location",
fill = "Family") +
theme(
legend.position = "bottom",
legend.box.just = "center",
legend.margin = margin(t = 0, r = 0, b = 0, l = 0)) +
scale_fill_manual(values = custom_colors)
## Save the plot
ggsave("figures/category_family_distribution.png", width = 12, height = 10)
